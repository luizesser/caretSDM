[{"path":"https://luizesser.github.io/caretSDM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dayani Bailly. Author. Edivando Couto. Author. José Hilário Delconte Ferreira. Author. Reginaldo Ré. Author. Valéria Batista. Author. Luíz Esser. Author, maintainer.","code":""},{"path":"https://luizesser.github.io/caretSDM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bailly D, Couto E, Hilário Delconte Ferreira J, Ré R, Batista V, Esser L (2025). caretSDM: Build Species Distribution Modeling using caret.. R package version 1.0.7, https://luizesser.github.io/caretSDM/.","code":"@Manual{,   title = {caretSDM: Build Species Distribution Modeling using caret.},   author = {Dayani Bailly and Edivando Couto and José {Hilário Delconte Ferreira} and Reginaldo Ré and Valéria Batista and Luíz Esser},   year = {2025},   note = {R package version 1.0.7},   url = {https://luizesser.github.io/caretSDM/}, }"},{"path":"https://luizesser.github.io/caretSDM/index.html","id":"caretsdm","dir":"","previous_headings":"","what":"Build Species Distribution Modeling using caret.","title":"Build Species Distribution Modeling using caret.","text":"Luíz Fernando Esser","code":""},{"path":"https://luizesser.github.io/caretSDM/index.html","id":"caretsdm-","dir":"","previous_headings":"","what":"caretSDM","title":"Build Species Distribution Modeling using caret.","text":"caretSDM development R package uses powerful caret package main engine obtain Species Distribution Models. caret packaged turned build machine learning models, caretSDM strong focus approach.","code":""},{"path":"https://luizesser.github.io/caretSDM/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing","title":"Build Species Distribution Modeling using caret.","text":"First install package github. need install devtools package first install caretSDM package.","code":"install.packages(setdiff(\"devtools\", rownames(installed.packages()))) devtools::install_github(\"luizesser/caretSDM\", build_vignettes = TRUE) # This can take around 7 minutes to complete. library(caretSDM)"},{"path":"https://luizesser.github.io/caretSDM/index.html","id":"you-need-help","dir":"","previous_headings":"","what":"You need help?","title":"Build Species Distribution Modeling using caret.","text":"caretSDM vastly documented included objects can guide data management. data code seem wrong, try take look objects vignettes: Objects bioc Bioclimatic variables current scenario stars class. occ Araucaria angustifolia occurrence data dataframe. parana Shapefile use sdm_area Simple Feature class. scen Bioclimatic variables future scenarios stars class. algorithms Dataframe characteristics every algorithm available caretSDM. Vignettes Araucaria main vignette terrestrial species modeling. Salminus main vignette continental aquatic species modeling. access vignettes R, simply run:","code":"vignette(\"Araucaria\", \"caretSDM\")"},{"path":"https://luizesser.github.io/caretSDM/reference/GBIF_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Species data from GBIF — GBIF_data","title":"Retrieve Species data from GBIF — GBIF_data","text":"function wrapper get records GBIF using rgbif return data.frame ready used caretSDM.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/GBIF_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Species data from GBIF — GBIF_data","text":"","code":"GBIF_data(s, file = \"\", as_df = FALSE, ...)"},{"path":"https://luizesser.github.io/caretSDM/reference/GBIF_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Species data from GBIF — GBIF_data","text":"s character vector species names. file File save output. as_df output dataframe? Default FALSE, returning occurrences object. ... Arguments pass rgbif::occ_data().","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/GBIF_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieve Species data from GBIF — GBIF_data","text":"https://www.gbif.org","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/GBIF_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve Species data from GBIF — GBIF_data","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/GBIF_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Species data from GBIF — GBIF_data","text":"","code":"# Select species names: s <- c(\"Araucaria angustifolia\", \"Paubrasilia echinata\", \"Eugenia uniflora\")  # Run function: oc <- GBIF_data(s)"},{"path":"https://luizesser.github.io/caretSDM/reference/WorldClim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download WorldClim v.2.1 bioclimatic data — WorldClim_data","title":"Download WorldClim v.2.1 bioclimatic data — WorldClim_data","text":"function allows download data WorldClim v.2.1 (https://www.worldclim.org/data/index.html) considering multiple GCMs, time periods SSPs.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/WorldClim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download WorldClim v.2.1 bioclimatic data — WorldClim_data","text":"","code":"WorldClim_data(path = NULL,                period = 'current',                variable = 'bioc',                year = '2090',                gcm = 'mi',                ssp = '585',                resolution = 10)"},{"path":"https://luizesser.github.io/caretSDM/reference/WorldClim_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download WorldClim v.2.1 bioclimatic data — WorldClim_data","text":"path Directory path save downloads. period Can 'current' 'future'. variable Allows specify variables want retrieve Possible entries : 'tmax','tmin','prec' /'bioc'. year Specify year want retrieve data. Possible entries : '2030', '2050', '2070' /'2090'. can  use vector provide one entry. gcm GCMs considered future scenarios. can use vector provide one entry. ssp SSPs future data. Possible entries : '126', '245', '370' /'585'. can use vector provide one entry. resolution can select one resolution following alternatives: 10, 5, 2.5 30.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/WorldClim_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download WorldClim v.2.1 bioclimatic data — WorldClim_data","text":"function create folder entitled 'input_data/WorldClim_data_current' 'input_data/WorldClim_data_future'. data downloaded stored folder. Note , despite possible retrieve lot data , recommended , since data heavy.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/WorldClim_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download WorldClim v.2.1 bioclimatic data — WorldClim_data","text":"https://www.worldclim.org/data/index.html","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/WorldClim_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download WorldClim v.2.1 bioclimatic data — WorldClim_data","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/WorldClim_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download WorldClim v.2.1 bioclimatic data — WorldClim_data","text":"","code":"if (FALSE) { # \\dontrun{ # download data from multiple periods: year <- c(2050, 2090) WorldClim_data(\"bioc\", year, \"mi\", 126, 10)  # download data from one specific period WorldClim_data(\"bioc\", 2070, \"mi\", 585, 10) } # }"},{"path":"https://luizesser.github.io/caretSDM/reference/add_predictors.html","id":null,"dir":"Reference","previous_headings":"","what":"Add predictors to sdm_area — add_predictors","title":"Add predictors to sdm_area — add_predictors","text":"function includes new predictors sdm_area object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/add_predictors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add predictors to sdm_area — add_predictors","text":"","code":"add_predictors(sa, pred, variables_selected = NULL, gdal = TRUE)  get_predictors(i)"},{"path":"https://luizesser.github.io/caretSDM/reference/add_predictors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add predictors to sdm_area — add_predictors","text":"sa sdm_area object. pred RasterStack, SpatRaster stars object predictors data. variables_selected character vector variables names pred used predictors. NULL adds variables. gdal Boolean. Force use GDAL available. See details. input_sdm sdm_area object retrieve data .","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/add_predictors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add predictors to sdm_area — add_predictors","text":"input sdm_area object returned including pred data binded previous grid.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/add_predictors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add predictors to sdm_area — add_predictors","text":"function returns sdm_area object grid built upon x parameter. two ways make grid resample variables sdm_area: without gdal. standard, gdal available machine used (gdal = TRUE), otherwise sf/stars used.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/add_predictors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add predictors to sdm_area — add_predictors","text":"Luíz Fernando Esser (luizesser@gmail.com) Reginaldo Ré. https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/add_predictors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add predictors to sdm_area — add_predictors","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables."},{"path":"https://luizesser.github.io/caretSDM/reference/add_scenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Add scenarios to sdm_area — add_scenarios","title":"Add scenarios to sdm_area — add_scenarios","text":"function includes scenarios sdm_area object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/add_scenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add scenarios to sdm_area — add_scenarios","text":"","code":"add_scenarios(sa, scen = NULL, scenarios_names = NULL, pred_as_scen = TRUE,                      variables_selected = NULL, stationary = NULL, ...)  select_scenarios(i, scenarios_names = NULL)  set_scenarios_names(i, scenarios_names = NULL)"},{"path":"https://luizesser.github.io/caretSDM/reference/add_scenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add scenarios to sdm_area — add_scenarios","text":"sa sdm_area object. scen RasterStack, SpatRaster stars object. NULL adds predictors scenario. scenarios_names Character vector names scenarios. pred_as_scen Logical. TRUE adds current predictors scenario. variables_selected Character vector variables names scen used predictors. NULL adds variables. stationary Names variables sa used scenarios stationary variables.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/add_scenarios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add scenarios to sdm_area — add_scenarios","text":"input sdm_area object new slot called scenarios scen data list, slot list scenario scenario sf.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/add_scenarios.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add scenarios to sdm_area — add_scenarios","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/add_scenarios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add scenarios to sdm_area — add_scenarios","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)"},{"path":"https://luizesser.github.io/caretSDM/reference/algorithms.html","id":null,"dir":"Reference","previous_headings":"","what":"Caret Algorithms — algorithms","title":"Caret Algorithms — algorithms","text":"data.frame characteristics algorithm available caretSDM. column different characteristics. can helpful experienced modelers select algorithms. See source selection method using data.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/algorithms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Caret Algorithms — algorithms","text":"","code":"algorithms"},{"path":"https://luizesser.github.io/caretSDM/reference/algorithms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Caret Algorithms — algorithms","text":"## `algorithms` data.frame 230 rows 60 columns: X Algorithms names columns Algorithms attributes","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/algorithms.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Caret Algorithms — algorithms","text":"<https://topepo.github.io/caret/models-clustered--tag-similarity.html>","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/bioc.html","id":null,"dir":"Reference","previous_headings":"","what":"Bioclimatic Variables — bioc","title":"Bioclimatic Variables — bioc","text":"stars object bioclimatic variables (bio1, bio4 bio12) Parana state Brazil. Data obtained WorldClim 2.1 10 arc-min resolution.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/bioc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bioclimatic Variables — bioc","text":"","code":"bioc"},{"path":"https://luizesser.github.io/caretSDM/reference/bioc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bioclimatic Variables — bioc","text":"## `bioc` stars 1 attribute 3 bands: bio1 Annual Mean Temperature bio4 Temperature Seasonality bio12 Annual Precipitation","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/bioc.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bioclimatic Variables — bioc","text":"<https://www.worldclim.org/>","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/buffer_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create buffer around occurrences — buffer_sdm","title":"Create buffer around occurrences — buffer_sdm","text":"Obtain Partial Dependence Plots (PDP) variable.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/buffer_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create buffer around occurrences — buffer_sdm","text":"","code":"buffer_sdm(occ_data, size = NULL, crs = NULL)"},{"path":"https://luizesser.github.io/caretSDM/reference/buffer_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create buffer around occurrences — buffer_sdm","text":"occ_data data.frame object species, decimalLongitude decimalLatitude columns. Usually output GBIF_data. size numeric. distance record margin buffer (.e. buffer radius). crs numeric. Indicates EPSG occ_data .","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/buffer_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create buffer around occurrences — buffer_sdm","text":"buffer around occ_data records.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/buffer_sdm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create buffer around occurrences — buffer_sdm","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/buffer_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create buffer around occurrences — buffer_sdm","text":"","code":"# Create sdm_area object: study_area <- buffer_sdm(occ, size=50000, crs=6933) plot(study_area)"},{"path":"https://luizesser.github.io/caretSDM/reference/caretSDM-package.html","id":null,"dir":"Reference","previous_headings":"","what":"caretSDM: Build Species Distribution Modeling using caret. — caretSDM-package","title":"caretSDM: Build Species Distribution Modeling using caret. — caretSDM-package","text":"Use machine learning algorithms advanced geoprocessing tools build Species Distribution Modeling (SDMs) extensible modern fashion.n","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/caretSDM-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"caretSDM: Build Species Distribution Modeling using caret. — caretSDM-package","text":"Maintainer: Luíz Esser luizesser@gmail.com (ORCID) Authors: Dayani Bailly (ORCID) Edivando Couto (ORCID) José Hilário Delconte Ferreira (ORCID) Reginaldo Ré (ORCID) Valéria Batista (ORCID)","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/data_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Presence data cleaning routine — data_clean","title":"Presence data cleaning routine — data_clean","text":"Data cleaning wrapper using CoordinateCleaner.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/data_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Presence data cleaning routine — data_clean","text":"","code":"data_clean(occ, pred = NULL,            species = NA, lon = NA, lat = NA,            capitals = TRUE,            centroids = TRUE,            duplicated = TRUE,            identical = TRUE,            institutions = TRUE,            invalid = TRUE,            terrestrial = TRUE,            independent_test = TRUE)"},{"path":"https://luizesser.github.io/caretSDM/reference/data_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Presence data cleaning routine — data_clean","text":"occ occurrences_sdm object input_sdm. pred sdm_area object. occ input_sdm object predictors data, pred obtained . species character stating name column species names occ (see details). lon character stating name column longitude occ (see details). lat character stating name column latitude occ (see details). capitals Boolean turn /exclusion countries capitals coordinates (see ?cc_cap) centroids Boolean turn /exclusion countries centroids coordinates (see ?cc_cen) duplicated Boolean turn /exclusion duplicated records (see ?cc_dupl) identical Boolean turn /exclusion records identical lat/long values (see ?cc_equ) institutions Boolean turn /exclusion biodiversity institutions coordinates (see ?cc_inst) invalid Boolean turn /exclusion invalid coordinates (see ?cc_val) terrestrial Boolean turn /exclusion coordinates falling sea (see ?cc_sea) independent_test TRUE. occ independent test data, data cleaning routine also applied .","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/data_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Presence data cleaning routine — data_clean","text":"occurrences_sdm object input_sdm new presence data.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/data_clean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Presence data cleaning routine — data_clean","text":"user used GBIF_data function obtain species records, function may problems find column presences table species, longitude latitude information. regard, implemented parameters species, lon lat use can explicitly inform columns used. remain NA (standard) function try guess columns correct one.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/data_clean.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Presence data cleaning routine — data_clean","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/data_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Presence data cleaning routine — data_clean","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect.  # Create input_sdm: i <- input_sdm(oc, sa)  # Clean coordinates: i <- data_clean(i) #> Cell_ids identified, removing duplicated cell_id. #> Testing country capitals #> Removed 0 records. #> Testing country centroids #> Removed 0 records. #> Testing duplicates #> Removed 0 records. #> Testing equal lat/lon #> Removed 0 records. #> Testing biodiversity institutions #> Removed 1 records. #> Testing coordinate validity #> Removed 0 records. #> Testing sea coordinates #> Reading layer `ne_110m_land' from data source `/tmp/RtmpBV0kIY/ne_110m_land.shp' using driver `ESRI Shapefile' #> Simple feature collection with 127 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.64513 #> Geodetic CRS:  WGS 84 #> Removed 0 records. #> Predictors identified, procceding with grid filter (removing NA and duplicated data)."},{"path":"https://luizesser.github.io/caretSDM/reference/gcms_ensembles.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble GCMs into one scenario — gcms_ensembles","title":"Ensemble GCMs into one scenario — gcms_ensembles","text":"ensembling method group different GCMs one SSP scenario","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/gcms_ensembles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble GCMs into one scenario — gcms_ensembles","text":"","code":"gcms_ensembles(i, gcms = NULL)"},{"path":"https://luizesser.github.io/caretSDM/reference/gcms_ensembles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble GCMs into one scenario — gcms_ensembles","text":"input_sdm object. gcms GCM codes scenarios_names() group scenarios.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/gcms_ensembles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensemble GCMs into one scenario — gcms_ensembles","text":"input_sdm object grouped GCMs.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/gcms_ensembles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ensemble GCMs into one scenario — gcms_ensembles","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/gcms_ensembles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensemble GCMs into one scenario — gcms_ensembles","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa, scen) #> Error in set_variables_names(scen, sa): ℹ `s1` has 3 variables, while `s2` has 4 variables. #> ✖ `s1` and `s2` should have the same number of variables.  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect.  # Create input_sdm: i <- input_sdm(oc, sa)  # Clean coordinates: i <- data_clean(i) #> Cell_ids identified, removing duplicated cell_id. #> Testing country capitals #> Removed 0 records. #> Testing country centroids #> Removed 0 records. #> Testing duplicates #> Removed 0 records. #> Testing equal lat/lon #> Removed 0 records. #> Testing biodiversity institutions #> Removed 1 records. #> Testing coordinate validity #> Removed 0 records. #> Testing sea coordinates #> Reading layer `ne_110m_land' from data source `/tmp/RtmpBV0kIY/ne_110m_land.shp' using driver `ESRI Shapefile' #> Simple feature collection with 127 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.64513 #> Geodetic CRS:  WGS 84 #> Removed 0 records. #> Predictors identified, procceding with grid filter (removing NA and duplicated data).  # VIF calculation: i <- vif_predictors(i) #> Warning: the standard deviation is zero #> Error in xcor[mx[1], mx[2]]: subscript out of bounds  # Pseudoabsence generation: i <- pseudoabsences(i, method=\"bioclim\", variables_selected = \"vif\") #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'is.factor': undefined columns selected  # Custom trainControl: ctrl_sdm <- caret::trainControl(method = \"repeatedcv\", number = 4, repeats = 10, classProbs = TRUE, returnResamp = \"all\", summaryFunction = summary_sdm, savePredictions = \"all\")  # Train models: i <- train_sdm(i, algo = c(\"nnet\", \"kknn\"), variables_selected = \"vif\", ctrl=ctrl_sdm) #> Error in rep(\"pseudoabsence\", nrow(pa)): invalid 'times' argument  # Predict models: i  <- predict_sdm(i) #> Error in UseMethod(\"predict_sdm\", scen): no applicable method for 'predict_sdm' applied to an object of class \"NULL\"  # Ensemble GCMs: i <- gcms_ensembles(i, gcms = c(\"CanESM5\", \"MIROC6\")) #> Error in matrix(nrow = nrow(y), ncol = length(scen_names), dimnames = list(rownames(y),     scen_names)): non-numeric matrix extent i #>             caretSDM            #> ............................... #> Class                         : input_sdm #> --------  Occurrences  -------- #> Species Names                 : Araucaria angustifolia  #> Number of presences           : 84  #> Data Cleaning                 : NAs, Capitals, Centroids, Geographically Duplicated, Identical Lat/Long, Institutions, Invalid, Non-terrestrial, Duplicated Cell (grid)  #> --------  Predictors  --------- #> Number of Predictors          : 4  #> Predictors Names              : GID0, CODIGOIB1, NOMEUF2, SIGLAUF3"},{"path":"https://luizesser.github.io/caretSDM/reference/input_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"input_sdm — input_sdm","title":"input_sdm — input_sdm","text":"function creates new input_sdm object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/input_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"input_sdm — input_sdm","text":"","code":"input_sdm(...)"},{"path":"https://luizesser.github.io/caretSDM/reference/input_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"input_sdm — input_sdm","text":"... Data used SDMs. Can occurrences /sdm_area object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/input_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"input_sdm — input_sdm","text":"input_sdm object containing: grid sf POLYGON geometry representing grid study area. bbox Four corners bounding box (class bbox): minimum value X, minimum value Y, maximum value X, maximum value Y cell_size numeric information regarding size cell used rescale variables study area, representing also cell size grid. epsg character information EPSG used slots sdm_area. predictors character vector predictors names included sdm_area.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/input_sdm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"input_sdm — input_sdm","text":"sdm_area used, can include predictors scenarios. case, input_sdm detect include scenarios predictors input_sdm output. Objects can included order, since function work detecting classes. returned object used throughout whole workflow apply functions.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/input_sdm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"input_sdm — input_sdm","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/input_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"input_sdm — input_sdm","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect.  # Create input_sdm: i <- input_sdm(oc, sa)"},{"path":"https://luizesser.github.io/caretSDM/reference/is_input_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"is_class functions to check caretSDM data classes. — is_input_sdm","title":"is_class functions to check caretSDM data classes. — is_input_sdm","text":"functions returns boolean check caretSDM object classes.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/is_input_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_class functions to check caretSDM data classes. — is_input_sdm","text":"","code":"is_input_sdm(x)  is_sdm_area(x)  is_occurrences(x)  is_predictors(x)  is_scenarios(x)  is_models(x)  is_predictions(x)"},{"path":"https://luizesser.github.io/caretSDM/reference/is_input_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_class functions to check caretSDM data classes. — is_input_sdm","text":"x Object tested.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/is_input_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_class functions to check caretSDM data classes. — is_input_sdm","text":"Boolean.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/is_input_sdm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"is_class functions to check caretSDM data classes. — is_input_sdm","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/is_input_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is_class functions to check caretSDM data classes. — is_input_sdm","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  is_sdm_area(sa) #> [1] TRUE  is_input_sdm(sa) #> [1] FALSE"},{"path":"https://luizesser.github.io/caretSDM/reference/join_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Join Area — join_area","title":"Join Area — join_area","text":"Join cell_id data sdm_area occurrences","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/join_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join Area — join_area","text":"","code":"join_area(occ, pred)"},{"path":"https://luizesser.github.io/caretSDM/reference/join_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join Area — join_area","text":"occ occurrences object input_sdm. pred sdm_area object retrieve cell_id .","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/join_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join Area — join_area","text":"occurrences object cell_id record.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/join_area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Join Area — join_area","text":"function key SDM workflow. attaches cell_id values occ, deletes records outside pred allows use pseudoabsences. function also tests CRS occ pred equal, otherwise CRS pred used convert occ.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/join_area.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Join Area — join_area","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/join_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join Area — join_area","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect."},{"path":"https://luizesser.github.io/caretSDM/reference/occ.html","id":null,"dir":"Reference","previous_headings":"","what":"Araucaria angustifolia occurrence data — occ","title":"Araucaria angustifolia occurrence data — occ","text":"data.frame object Araucaria angustifolia occurrence data obtained GBIF filtered Parana state sf.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/occ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Araucaria angustifolia occurrence data — occ","text":"","code":"occ"},{"path":"https://luizesser.github.io/caretSDM/reference/occ.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Araucaria angustifolia occurrence data — occ","text":"## `occ` data.frame 420 rows 3 columns (EPSG:6933): species Species name decimalLongitude Longitude meters decimalLatitude Latitude meters","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/occ.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Araucaria angustifolia occurrence data — occ","text":"<https://www.gbif.org>","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/occurrences_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Occurrences Managing — occurrences_sdm","title":"Occurrences Managing — occurrences_sdm","text":"function creates manage occurrences objects.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/occurrences_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Occurrences Managing — occurrences_sdm","text":"","code":"occurrences_sdm(x,                 independent_test = NULL,                 p = 0.1,                 crs = NULL,                 independent_test_crs = NULL,                 ...)  n_records(i)  species_names(i)  get_coords(i)  occurrences_as_df(i)  add_occurrences(oc1, oc2)"},{"path":"https://luizesser.github.io/caretSDM/reference/occurrences_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Occurrences Managing — occurrences_sdm","text":"x data.frame, tibble sf species records. independent_test Boolean. independet_test TRUE, fraction data kept independent testing. Otherwise, whole dataset x used. can also data.frame sf, species records used independent test. Structure names identical x. p Numeric. Fraction data used independent test. Standard 0.1. crs Numeric. CRS x. independent_test_crs Numeric. CRS independent_test data.frame. ... vector column names addressing columns species names, longitude latitude, respectively, x. input_sdm occurrences object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/occurrences_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Occurrences Managing — occurrences_sdm","text":"occurrences object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/occurrences_sdm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Occurrences Managing — occurrences_sdm","text":"x must three columns: species, decimalLongitude decimalLatitude. sf necessary species column. n_records return number presence records species. species_names return species names. get_coords return data.frame coordinates species records. add_occurrences return occurrences. function sums two occurrences objects. can also sum occurrences object data.frame object.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/occurrences_sdm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Occurrences Managing — occurrences_sdm","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/occurrences_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Occurrences Managing — occurrences_sdm","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933)"},{"path":"https://luizesser.github.io/caretSDM/reference/parana.html","id":null,"dir":"Reference","previous_headings":"","what":"Paraná State — parana","title":"Paraná State — parana","text":"sf object polygon Paraná state Brazil. subset brazilian map provided official government agency (IBGE)","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/parana.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paraná State — parana","text":"","code":"parana"},{"path":"https://luizesser.github.io/caretSDM/reference/parana.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Paraná State — parana","text":"## `parana` sf 1 row 5 columns: GID0 State code CODIGOIB1 State's phone code NOMEUF2 Name state SIGLAUF3 Abbreviation state's name geom Geometry column sf","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/parana.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Paraná State — parana","text":"<https://www.ibge.gov.br/geociencias/cartas-e-mapas/bases-cartograficas-continuas/15759-brasil.html>","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/pca_predictors.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictors as PCA-axis — pca_predictors","title":"Predictors as PCA-axis — pca_predictors","text":"Transform predictors data PCA-axis.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/pca_predictors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictors as PCA-axis — pca_predictors","text":"","code":"pca_predictors(i)  pca_summary(i)  get_pca_model(i)"},{"path":"https://luizesser.github.io/caretSDM/reference/pca_predictors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictors as PCA-axis — pca_predictors","text":"input_sdm object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/pca_predictors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictors as PCA-axis — pca_predictors","text":"input_sdm object variables predictors scenarios transformed PCA-axis.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/pca_predictors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predictors as PCA-axis — pca_predictors","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/pca_predictors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predictors as PCA-axis — pca_predictors","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect.  # Create input_sdm: i <- input_sdm(oc, sa)  # Clean coordinates: i <- data_clean(i) #> Cell_ids identified, removing duplicated cell_id. #> Testing country capitals #> Removed 0 records. #> Testing country centroids #> Removed 0 records. #> Testing duplicates #> Removed 0 records. #> Testing equal lat/lon #> Removed 0 records. #> Testing biodiversity institutions #> Removed 1 records. #> Testing coordinate validity #> Removed 0 records. #> Testing sea coordinates #> Reading layer `ne_110m_land' from data source `/tmp/RtmpBV0kIY/ne_110m_land.shp' using driver `ESRI Shapefile' #> Simple feature collection with 127 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.64513 #> Geodetic CRS:  WGS 84 #> Removed 0 records. #> Predictors identified, procceding with grid filter (removing NA and duplicated data).  # VIF calculation: i <- pca_predictors(i) #> Error in 1:(sum(pca_summary(i)$importance[\"Cumulative Proportion\", ] <     0.99) + 1): NA/NaN argument"},{"path":"https://luizesser.github.io/caretSDM/reference/pdp_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Response to Variables — pdp_sdm","title":"Model Response to Variables — pdp_sdm","text":"Obtain Partial Dependence Plots (PDP) variable.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/pdp_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Response to Variables — pdp_sdm","text":"","code":"pdp_sdm(i, spp = NULL, algo = NULL, variables_selected = NULL)  get_pdp_sdm(i, spp = NULL, algo = NULL, variables_selected = NULL)"},{"path":"https://luizesser.github.io/caretSDM/reference/pdp_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Response to Variables — pdp_sdm","text":"input_sdm object. spp character vector species names obtain PDPs. NULL (standard), first species species_names() used. algo character containing algorithm obtain PDP. NULL (standard) algorithms mixed. variables_selected subset predictors ploted , can informed using parameter. mean.Boolean. mean curve plotted curve run included? Standard FALSE.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/pdp_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Response to Variables — pdp_sdm","text":"plot (pdp_sdm) data.frame (get_pdp_sdm) PDP values.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/pdp_sdm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Model Response to Variables — pdp_sdm","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/pdp_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Response to Variables — pdp_sdm","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect.  # Create input_sdm: i <- input_sdm(oc, sa)  # Clean coordinates: i <- data_clean(i) #> Cell_ids identified, removing duplicated cell_id. #> Testing country capitals #> Removed 0 records. #> Testing country centroids #> Removed 0 records. #> Testing duplicates #> Removed 0 records. #> Testing equal lat/lon #> Removed 0 records. #> Testing biodiversity institutions #> Removed 1 records. #> Testing coordinate validity #> Removed 0 records. #> Testing sea coordinates #> Reading layer `ne_110m_land' from data source `/tmp/RtmpBV0kIY/ne_110m_land.shp' using driver `ESRI Shapefile' #> Simple feature collection with 127 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.64513 #> Geodetic CRS:  WGS 84 #> Removed 0 records. #> Predictors identified, procceding with grid filter (removing NA and duplicated data).  # VIF calculation: i <- vif_predictors(i) #> Warning: the standard deviation is zero #> Error in xcor[mx[1], mx[2]]: subscript out of bounds  # Pseudoabsence generation: i <- pseudoabsences(i, method=\"bioclim\", variables_selected = \"vif\") #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'is.factor': undefined columns selected  # Custom trainControl: ctrl_sdm <- caret::trainControl(method = \"repeatedcv\", number = 4, repeats = 10, classProbs = TRUE, returnResamp = \"all\", summaryFunction = summary_sdm, savePredictions = \"all\")  # Train models: i <- train_sdm(i, algo = c(\"nnet\", \"kknn\"), variables_selected = \"vif\", ctrl=ctrl_sdm) #> Error in rep(\"pseudoabsence\", nrow(pa)): invalid 'times' argument  # PDP plots: pdp_sdm(i) #> Error in dplyr::group_by(l2, variable): Must group by variables found in `.data`. #> ✖ Column `variable` is not found. get_pdp_sdm(i) #> list()"},{"path":"https://luizesser.github.io/caretSDM/reference/plot_occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 Methods for plot — plot_occurrences","title":"S3 Methods for plot — plot_occurrences","text":"function creates different plots depending input.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/plot_occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Methods for plot — plot_occurrences","text":"","code":"plot_occurrences(i, spp_name = NULL, pa = TRUE)  plot_grid(i)  plot_predictors(i, variables_selected = NULL)  plot_scenarios(i, variables_selected = NULL, scenario = NULL)  plot_predictions(   i,   spp_name = NULL,   scenario = NULL,   id = NULL,   ensemble = TRUE,   ensemble_type = \"mean_occ_prob\" )  mapview_grid(i)  mapview_occurrences(i, spp_name = NULL, pa = TRUE)  mapview_predictors(i, variables_selected = NULL)  mapview_scenarios(i, variables_selected = NULL, scenario = NULL)  mapview_predictions(   i,   spp_name = NULL,   scenario = NULL,   id = NULL,   ensemble = TRUE,   ensemble_type = \"mean_occ_prob\" )"},{"path":"https://luizesser.github.io/caretSDM/reference/plot_occurrences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Methods for plot — plot_occurrences","text":"Object plotted.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/plot_occurrences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 Methods for plot — plot_occurrences","text":"predictors object.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/plot_occurrences.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"S3 Methods for plot — plot_occurrences","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/predict_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict SDM models in new data — predict_sdm","title":"Predict SDM models in new data — predict_sdm","text":"function projects SDM models new scenarios","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/predict_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict SDM models in new data — predict_sdm","text":"","code":"predict_sdm(m,             scen = NULL,             metric = \"ROC\",             th = 0.9,             tp = \"prob\",             ensembles = TRUE,             file = NULL,             add.current = TRUE)  scenarios_names(i)  get_scenarios_data(i)  get_predictions(i)  get_ensembles(i)"},{"path":"https://luizesser.github.io/caretSDM/reference/predict_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict SDM models in new data — predict_sdm","text":"m input_sdm models object. scen scenarios object NULL. NULL m input_sdm scenarios slot, used. metric character containing metric th calculated/applied. Default ROC. See ?mean_validation_metrics metrics available. th Thresholds metrics. Can numeric function. tp Type output retrieved. See details. file File sabe predictions. ensembles Boolean. ensembles calculated? TRUE series ensembles obtained. See details. add.current current scenario available, predictors used current scenario. input_sdm predictions object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/predict_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict SDM models in new data — predict_sdm","text":"input_sdm predictions object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/predict_sdm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict SDM models in new data — predict_sdm","text":"tp parameter passed caret retrieve either probabilities classes (tp=\"prob\") raw output (tp=\"raw\"), vary depending algorithm used, usually classes (factor vector presences pseudoabsences). ensembles set TRUE, three ensembles currently implemented. mean_occ_prob mean occurrence probability, simple mean predictions, wmean_AUC mean_occ_prob, weighted AUC, committee_avg committee average, known majority rule, predictions binarized mean obtained. get_predictions returns list predictions scenarios, species, algorithms repetitions. Useful wish implement ensemble methods. get_ensembles returns matrix data.frames, column scenario row species. scenarios_names returns scenarios names sdm_area input_sdm object. get_scenarios_data returns data scenarios sdm_area input_sdm object.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/predict_sdm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predict SDM models in new data — predict_sdm","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/predict_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict SDM models in new data — predict_sdm","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect.  # Create input_sdm: i <- input_sdm(oc, sa)  # Clean coordinates: i <- data_clean(i) #> Cell_ids identified, removing duplicated cell_id. #> Testing country capitals #> Removed 0 records. #> Testing country centroids #> Removed 0 records. #> Testing duplicates #> Removed 0 records. #> Testing equal lat/lon #> Removed 0 records. #> Testing biodiversity institutions #> Removed 1 records. #> Testing coordinate validity #> Removed 0 records. #> Testing sea coordinates #> Reading layer `ne_110m_land' from data source `/tmp/RtmpBV0kIY/ne_110m_land.shp' using driver `ESRI Shapefile' #> Simple feature collection with 127 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.64513 #> Geodetic CRS:  WGS 84 #> Removed 0 records. #> Predictors identified, procceding with grid filter (removing NA and duplicated data).  # VIF calculation: i <- vif_predictors(i) #> Warning: the standard deviation is zero #> Error in xcor[mx[1], mx[2]]: subscript out of bounds  # Pseudoabsence generation: i <- pseudoabsences(i, method=\"bioclim\", variables_selected = \"vif\") #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'is.factor': undefined columns selected  # Custom trainControl: ctrl_sdm <- caret::trainControl(method = \"repeatedcv\", number = 4, repeats = 10, classProbs = TRUE, returnResamp = \"all\", summaryFunction = summary_sdm, savePredictions = \"all\")  # Train models: i <- train_sdm(i, algo = c(\"nnet\", \"kknn\"), variables_selected = \"vif\", ctrl=ctrl_sdm) #> Error in rep(\"pseudoabsence\", nrow(pa)): invalid 'times' argument  # Predict models: i  <- predict_sdm(i) #> Error in mean_validation_metrics(m)[[1]]: subscript out of bounds i #>             caretSDM            #> ............................... #> Class                         : input_sdm #> --------  Occurrences  -------- #> Species Names                 : Araucaria angustifolia  #> Number of presences           : 84  #> Data Cleaning                 : NAs, Capitals, Centroids, Geographically Duplicated, Identical Lat/Long, Institutions, Invalid, Non-terrestrial, Duplicated Cell (grid)  #> --------  Predictors  --------- #> Number of Predictors          : 4  #> Predictors Names              : GID0, CODIGOIB1, NOMEUF2, SIGLAUF3  #> ---------  Scenarios  --------- #> Number of Scenarios           : 1  #> Scenarios Names               : current"},{"path":"https://luizesser.github.io/caretSDM/reference/predictor_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictors Names Managing — predictors","title":"Predictors Names Managing — predictors","text":"function manage predictors names sdm_area objects.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/predictor_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictors Names Managing — predictors","text":"","code":"predictors(x)  # S3 method for class 'sdm_area' predictors(x, ...)  # S3 method for class 'input_sdm' predictors(x, ...)  set_predictor_names(x, new_names)  # S3 method for class 'input_sdm' set_predictor_names(x, new_names)  # S3 method for class 'sdm_area' set_predictor_names(x, new_names)  get_predictor_names(x)  # S3 method for class 'sdm_area' get_predictor_names(x)  # S3 method for class 'input_sdm' get_predictor_names(x)  test_variables_names(sa, scen)  find_closest_matches(inputs, valid_inputs)  set_variables_names(s1 = NULL, s2 = NULL, new_names = NULL)"},{"path":"https://luizesser.github.io/caretSDM/reference/predictor_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictors Names Managing — predictors","text":"x sdm_area input_sdm object get/set predictors names. new_names character vector size length(get_predictor_names(x))","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/predictor_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictors Names Managing — predictors","text":"character vector predictors names.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/predictor_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predictors Names Managing — predictors","text":"functions available users can modify predictors names better represent . Use carefully avoid giving wrong names predictors. Useful make sure predictors names equal names scenarios.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/predictor_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predictors Names Managing — predictors","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/predictor_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predictors Names Managing — predictors","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Check predictors' names: get_predictor_names(sa) #> [1] \"GID0\"      \"CODIGOIB1\" \"NOMEUF2\"   \"SIGLAUF3\""},{"path":"https://luizesser.github.io/caretSDM/reference/print.input_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for predictors — print.input_sdm","title":"Print method for predictors — print.input_sdm","text":"Print method predictors","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/print.input_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for predictors — print.input_sdm","text":"","code":"# S3 method for class 'input_sdm' print(x)"},{"path":"https://luizesser.github.io/caretSDM/reference/print.models.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for predictors — print.models","title":"Print method for predictors — print.models","text":"Print method predictors","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/print.models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for predictors — print.models","text":"","code":"# S3 method for class 'models' print(x)"},{"path":"https://luizesser.github.io/caretSDM/reference/print.occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for occurrences — print.occurrences","title":"Print method for occurrences — print.occurrences","text":"Print method occurrences","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/print.occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for occurrences — print.occurrences","text":"","code":"# S3 method for class 'occurrences' print(x)"},{"path":"https://luizesser.github.io/caretSDM/reference/print.predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for predictors — print.predictions","title":"Print method for predictors — print.predictions","text":"Print method predictors","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/print.predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for predictors — print.predictions","text":"","code":"# S3 method for class 'predictions' print(x)"},{"path":"https://luizesser.github.io/caretSDM/reference/pseudoabsences.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Pseudoabsences — pseudoabsences","title":"Obtain Pseudoabsences — pseudoabsences","text":"function obtains pseudoabsences given set predictors.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/pseudoabsences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Pseudoabsences — pseudoabsences","text":"","code":"pseudoabsences(occ,                pred = NULL,                method = \"random\",                n_set = 10,                n_pa = NULL,                variables_selected = NULL,                th = 0)  n_pseudoabsences(i)  pseudoabsence_method(i)  pseudoabsence_data(i)"},{"path":"https://luizesser.github.io/caretSDM/reference/pseudoabsences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Pseudoabsences — pseudoabsences","text":"occ occurrences_sdm input_sdm object. pred sdm_area object. NULL occ input_sdm, pred retrieved occ. method Method create pseudoabsences. One : \"random\", \"bioclim\" \"mahal.dist\". n_set numeric. Number datasets pseudoabsence create. n_pa numeric. Number pseudoabsences generated dataset created. NULL function prevents imbalance using number presence records. variables_selected vector variables names used building pseudoabsences. used method \"random\". th numeric Threshold applied bioclim/mahal.dist projections. See details. input_sdm object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/pseudoabsences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Pseudoabsences — pseudoabsences","text":"occurrences_sdm input_sdm object pseudoabsence data.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/pseudoabsences.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain Pseudoabsences — pseudoabsences","text":"pseudoabsences used SDM workflow obtain pseudoabsences, step necessary algorithms run. implemented three methods far: \"random\", self-explanatory, \"bioclim\" \"mahal.dist\". two last built idea pseudoabsences environmentally different presences. Thus, implemented two presence-methods infer distribution species. \"bioclim\" uses envelope approach (bioclimatic envelope), \"mahal.dist\" uses distance approach (mahalanobis distance). th parameter enters threshold binarize results. Pseudoabsences retrieved outside projected distribution species. n_pseudoabsences returns number pseudoabsences obtained per species. pseudoabsence_method returns method used obtain pseudoabsences. pseudoabsence_data returns list species names. species name lists pseudoabsences data class sf.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/pseudoabsences.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Obtain Pseudoabsences — pseudoabsences","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/pseudoabsences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain Pseudoabsences — pseudoabsences","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect.  # Create input_sdm: i <- input_sdm(oc, sa)  # Clean coordinates: i <- data_clean(i) #> Cell_ids identified, removing duplicated cell_id. #> Testing country capitals #> Removed 0 records. #> Testing country centroids #> Removed 0 records. #> Testing duplicates #> Removed 0 records. #> Testing equal lat/lon #> Removed 0 records. #> Testing biodiversity institutions #> Removed 1 records. #> Testing coordinate validity #> Removed 0 records. #> Testing sea coordinates #> Reading layer `ne_110m_land' from data source `/tmp/RtmpBV0kIY/ne_110m_land.shp' using driver `ESRI Shapefile' #> Simple feature collection with 127 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.64513 #> Geodetic CRS:  WGS 84 #> Removed 0 records. #> Predictors identified, procceding with grid filter (removing NA and duplicated data).  # VIF calculation: i <- vif_predictors(i) #> Warning: the standard deviation is zero #> Error in xcor[mx[1], mx[2]]: subscript out of bounds  # Pseudoabsence generation: i <- pseudoabsence(i, method=\"bioclim\", variables_selected = \"vif\") #> Error in pseudoabsence(i, method = \"bioclim\", variables_selected = \"vif\"): could not find function \"pseudoabsence\""},{"path":"https://luizesser.github.io/caretSDM/reference/rivs.html","id":null,"dir":"Reference","previous_headings":"","what":"Hydrologic Variables — rivs","title":"Hydrologic Variables — rivs","text":"sf LINESTRING object hydrologic variables (LENGTH_KM DIST_DN_KM) Parana state Brazil. Data obtained HydroSHEDS rivers order < 3.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/rivs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hydrologic Variables — rivs","text":"","code":"rivs"},{"path":"https://luizesser.github.io/caretSDM/reference/rivs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hydrologic Variables — rivs","text":"## `bioc` sf 3748 attributes 2 fiels: LENGTH_KM Length river reach segment, kilometers. DIST_DN_KM Distance reach outlet, .e., downstream pixel reach, final downstream location along river network, kilometers. downstream location either pour point ocean endorheic sink.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/rivs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Hydrologic Variables — rivs","text":"<https://www.hydrosheds.org/>","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/salm.html","id":null,"dir":"Reference","previous_headings":"","what":"Salminus brasiliensis occurrence data — salm","title":"Salminus brasiliensis occurrence data — salm","text":"data.frame object Salminus brasiliensis occurrence data obtained GBIF filtered Parana state sf.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/salm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Salminus brasiliensis occurrence data — salm","text":"","code":"salm"},{"path":"https://luizesser.github.io/caretSDM/reference/salm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Salminus brasiliensis occurrence data — salm","text":"## `salm` data.frame 46 rows 3 columns (EPSG:6933): species Species name decimalLongitude Longitude meters decimalLatitude Latitude meters","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/salm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Salminus brasiliensis occurrence data — salm","text":"<https://www.gbif.org>","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/scen.html","id":null,"dir":"Reference","previous_headings":"","what":"Bioclimatic Variables — scen","title":"Bioclimatic Variables — scen","text":"stars object bioclimatic variables (bio1, bio4 bio12) four future scenarios Parana state Brazil. Data MIROC6 GCM WorldClim 2.1 10 arc-min resolution.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/scen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bioclimatic Variables — scen","text":"","code":"scen"},{"path":"https://luizesser.github.io/caretSDM/reference/scen.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bioclimatic Variables — scen","text":"## `scen` stars 4 attribute 3 bands: ca_ssp245_2090 Intermediate scenario year 2090 GCM CanESM5 ca_ssp585_2090 Extreme  scenario year 2090 GCM CanESM5 mi_ssp245_2090 Intermediate scenario year 2090 GCM MIROC6 mi_ssp585_2090 Extreme  scenario year 2090 GCM MIROC6 bio1 Annual Mean Temperature bio4 Temperature Seasonality bio12 Annual Precipitation","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/scen.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bioclimatic Variables — scen","text":"<https://www.worldclim.org/>","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/sdm_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a sdm_area object — sdm_area","title":"Create a sdm_area object — sdm_area","text":"function creates new sdm_area object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/sdm_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sdm_area object — sdm_area","text":"","code":"sdm_area(   x,   cell_size = NULL,   crs = NULL,   variables_selected = NULL,   gdal = TRUE,   crop_by = NULL,   lines_as_sdm_area = FALSE )  get_sdm_area(i)"},{"path":"https://luizesser.github.io/caretSDM/reference/sdm_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sdm_area object — sdm_area","text":"x shapefile raster. Usually shapefile sf class, rasters stars, rasterStack SpatRaster class also allowed. cell_size numeric. cell size used models. crs numeric. Indicates EPSG output grid . NULL, epsg x used. variables_selected character vector variables x used models. NULL (standard), variables x used. gdal Boolean. Force use GDAL available. See details. crop_by shapefile sf crop x.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/sdm_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a sdm_area object — sdm_area","text":"sdm_area object containing: grid sf POLYGON geometry representing grid study area. cell_size numeric information regarding size cell used rescale    variables study area, representing also cell size grid.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/sdm_area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a sdm_area object — sdm_area","text":"function returns sdm_area object grid built upon x parameter. two ways make grid resample variables sdm_area: without gdal. standard, gdal available machine used (gdal = TRUE), otherwise sf/stars used.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/sdm_area.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a sdm_area object — sdm_area","text":"Luíz Fernando Esser (luizesser@gmail.com) Reginaldo Ré. https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/sdm_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a sdm_area object — sdm_area","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables."},{"path":"https://luizesser.github.io/caretSDM/reference/sdm_as_stars.html","id":null,"dir":"Reference","previous_headings":"","what":"sdm_as_X functions to transform caretSDM data into other classes. — sdm_as_stars","title":"sdm_as_X functions to transform caretSDM data into other classes. — sdm_as_stars","text":"functions transform data caretSDM object used packages.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/sdm_as_stars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sdm_as_X functions to transform caretSDM data into other classes. — sdm_as_stars","text":"","code":"sdm_as_stars(x,              what = NULL,              spp = NULL,              scen = NULL,              id = NULL,              ens = NULL)  sdm_as_raster(x, what = NULL, spp = NULL, scen = NULL, id = NULL, ens = NULL)  sdm_as_terra(x, what = NULL, spp = NULL, scen = NULL, id = NULL, ens = NULL)"},{"path":"https://luizesser.github.io/caretSDM/reference/sdm_as_stars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sdm_as_X functions to transform caretSDM data into other classes. — sdm_as_stars","text":"x caretSDM object. Sometimes multiple data inside x transformed. parameter allows users specify needs converted.can one : \"predictors\", \"scenarios\", \"predictions\" \"ensembles\". spp character. species converted? scen character. scenario converted? id character. id converted? ens character. ensemble converted?","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/sdm_as_stars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sdm_as_X functions to transform caretSDM data into other classes. — sdm_as_stars","text":"output desired class.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/sdm_as_stars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sdm_as_X functions to transform caretSDM data into other classes. — sdm_as_stars","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/sdm_as_stars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sdm_as_X functions to transform caretSDM data into other classes. — sdm_as_stars","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect.  # Create input_sdm: i <- input_sdm(oc, sa)  # Clean coordinates: i <- data_clean(i) #> Cell_ids identified, removing duplicated cell_id. #> Testing country capitals #> Removed 0 records. #> Testing country centroids #> Removed 0 records. #> Testing duplicates #> Removed 0 records. #> Testing equal lat/lon #> Removed 0 records. #> Testing biodiversity institutions #> Removed 1 records. #> Testing coordinate validity #> Removed 0 records. #> Testing sea coordinates #> Reading layer `ne_110m_land' from data source `/tmp/RtmpBV0kIY/ne_110m_land.shp' using driver `ESRI Shapefile' #> Simple feature collection with 127 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.64513 #> Geodetic CRS:  WGS 84 #> Removed 0 records. #> Predictors identified, procceding with grid filter (removing NA and duplicated data).  # VIF calculation: i <- vif_predictors(i) #> Warning: the standard deviation is zero #> Error in xcor[mx[1], mx[2]]: subscript out of bounds  # Pseudoabsence generation: i <- pseudoabsence(i, method=\"bioclim\", variables_selected = \"vif\") #> Error in pseudoabsence(i, method = \"bioclim\", variables_selected = \"vif\"): could not find function \"pseudoabsence\"  # Custom trainControl: ctrl_sdm <- caret::trainControl(method = \"repeatedcv\", number = 4, repeats = 10, classProbs = TRUE, returnResamp = \"all\", summaryFunction = summary_sdm, savePredictions = \"all\")  # Train models: i <- train_sdm(i, algo = c(\"nnet\", \"kknn\"), variables_selected = \"vif\", ctrl=ctrl_sdm) #> Error in rep(\"pseudoabsence\", nrow(pa)): invalid 'times' argument  # Predict models: i  <- predict_sdm(i) #> Error in mean_validation_metrics(m)[[1]]: subscript out of bounds  # Transform in stars: sdm_as_stars(i) #> $current #> stars object with 1 dimensions and 5 attributes #> attribute(s): #>            Min. 1st Qu. Median     Mean 3rd Qu. Max. #> cell_id       6     162    277 264.9008     372  508 #> GID0         19      19     19  19.0000      19   19 #> CODIGOIB1    41      41     41  41.0000      41   41 #> NOMEUF2       0       0      0   0.0000       0    0 #> SIGLAUF3      0       0      0   0.0000       0    0 #> dimension(s): #>          from  to                       refsys point #> geometry    1 373 WGS 84 / NSIDC EASE-Grid ... FALSE #>                                                                 values #> geometry POLYGON ((-5151744 -27950...,...,POLYGON ((-4951744 -32700... #>"},{"path":"https://luizesser.github.io/caretSDM/reference/summary_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates performance across resamples — summary_sdm","title":"Calculates performance across resamples — summary_sdm","text":"function used caret::trainControl(summaryFunction=summary_sdm) calculate performance metrics across resamples.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/summary_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates performance across resamples — summary_sdm","text":"","code":"summary_sdm(data, lev = NULL, model = NULL)"},{"path":"https://luizesser.github.io/caretSDM/reference/summary_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates performance across resamples — summary_sdm","text":"data data.frame observed predicted values. lev character vector factors levels response. model Models names taken train object. custom_fun custom function applied models (yet implemented).","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/summary_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates performance across resamples — summary_sdm","text":"input_sdm predictions object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/summary_sdm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates performance across resamples — summary_sdm","text":"See ?caret::defaultSummary details options pass caret::trainControl.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/summary_sdm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculates performance across resamples — summary_sdm","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/summary_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates performance across resamples — summary_sdm","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect.  # Create input_sdm: i <- input_sdm(oc, sa)  # Clean coordinates: i <- data_clean(i) #> Cell_ids identified, removing duplicated cell_id. #> Testing country capitals #> Removed 0 records. #> Testing country centroids #> Removed 0 records. #> Testing duplicates #> Removed 0 records. #> Testing equal lat/lon #> Removed 0 records. #> Testing biodiversity institutions #> Removed 1 records. #> Testing coordinate validity #> Removed 0 records. #> Testing sea coordinates #> Reading layer `ne_110m_land' from data source `/tmp/RtmpBV0kIY/ne_110m_land.shp' using driver `ESRI Shapefile' #> Simple feature collection with 127 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.64513 #> Geodetic CRS:  WGS 84 #> Removed 0 records. #> Predictors identified, procceding with grid filter (removing NA and duplicated data).  # VIF calculation: i <- vif_predictors(i) #> Warning: the standard deviation is zero #> Error in xcor[mx[1], mx[2]]: subscript out of bounds  # Pseudoabsence generation: i <- pseudoabsences(i, method=\"bioclim\", variables_selected = \"vif\") #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'is.factor': undefined columns selected  # Custom trainControl: ctrl_sdm <- caret::trainControl(method = \"repeatedcv\", number = 4, repeats = 10, classProbs = TRUE, returnResamp = \"all\", summaryFunction = summary_sdm, savePredictions = \"all\")  # Train models: i <- train_sdm(i, algo = c(\"nnet\", \"kknn\"), variables_selected = \"vif\", ctrl = ctrl_sdm) #> Error in rep(\"pseudoabsence\", nrow(pa)): invalid 'times' argument i #>             caretSDM            #> ............................... #> Class                         : input_sdm #> --------  Occurrences  -------- #> Species Names                 : Araucaria angustifolia  #> Number of presences           : 84  #> Data Cleaning                 : NAs, Capitals, Centroids, Geographically Duplicated, Identical Lat/Long, Institutions, Invalid, Non-terrestrial, Duplicated Cell (grid)  #> --------  Predictors  --------- #> Number of Predictors          : 4  #> Predictors Names              : GID0, CODIGOIB1, NOMEUF2, SIGLAUF3"},{"path":"https://luizesser.github.io/caretSDM/reference/tidyverse-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidyverse methods for caretSDM objects — select_predictors","title":"Tidyverse methods for caretSDM objects — select_predictors","text":"Set functions facilitate use caretSDM tidyverse grammatics.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/tidyverse-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidyverse methods for caretSDM objects — select_predictors","text":"","code":"select_predictors(x, ...)  # S3 method for class 'sdm_area' select(x, ...)  # S3 method for class 'input_sdm' select(x, ...)  # S3 method for class 'sdm_area' mutate(x, ...)  # S3 method for class 'input_sdm' mutate(x, ...)  # S3 method for class 'sdm_area' filter(x, ...)  # S3 method for class 'input_sdm' filter(x, ...)  # S3 method for class 'occurrences' filter(x, ...)  filter_species(x, spp = NULL, ...)"},{"path":"https://luizesser.github.io/caretSDM/reference/tidyverse-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidyverse methods for caretSDM objects — select_predictors","text":"x sdm_area object ... character vector predictors selected.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/tidyverse-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidyverse methods for caretSDM objects — select_predictors","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist."},{"path":"https://luizesser.github.io/caretSDM/reference/train_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Train SDM models — train_sdm","title":"Train SDM models — train_sdm","text":"function wrapper fit models caret using caretSDM data.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/train_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train SDM models — train_sdm","text":"","code":"train_sdm(occ,           pred = NULL,           algo,           ctrl = NULL,           variables_selected = NULL,           parallel = FALSE)  get_tune_length(i)  algorithms_used(i)  get_models(i)  get_validation_metrics(i)  mean_validation_metrics(i)"},{"path":"https://luizesser.github.io/caretSDM/reference/train_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train SDM models — train_sdm","text":"occ occurrences input_sdm object. pred predictors object. occ input_sdm object, pred obtained . algo character vector. Algorithms used. complete list see (https://topepo.github.io/caret/available-models.html). 'maxent', 'mahal.dist' 'bioclim' also implemented, available run alone, algorithm together. ctrl trainControl object used build models. See trainControl. variables_selected vector variables used predictors. NULL, predictors names pred used. Can also selection method (e.g. 'vif'). parallel paralelization method used (yet implemented)? ... Additional arguments passed caret::train function. models input_sdm object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/train_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train SDM models — train_sdm","text":"models input_sdm object.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/train_sdm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Train SDM models — train_sdm","text":"object algorithms table comparing algorithms available. function detects necessary packages available ask installation. happen just first time use algorithm. get_tune_length return length used grid-search tunning. algorithms_used return names algorithms used modeling process. get_models returns list trained models (class train) species. get_validation_metrics return list data.frame species complete values ROC, Sensitivity, Specificity, respectives Standard Deviations (SD) TSS algorithms pseudoabsence datasets used. mean_validation_metrics return list tibble species summarizing values ROC, Sensitivity, Specificity TSS algorithms used.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/train_sdm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Train SDM models — train_sdm","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/train_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train SDM models — train_sdm","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect.  # Create input_sdm: i <- input_sdm(oc, sa)  # Clean coordinates: i <- data_clean(i) #> Cell_ids identified, removing duplicated cell_id. #> Testing country capitals #> Removed 0 records. #> Testing country centroids #> Removed 0 records. #> Testing duplicates #> Removed 0 records. #> Testing equal lat/lon #> Removed 0 records. #> Testing biodiversity institutions #> Removed 1 records. #> Testing coordinate validity #> Removed 0 records. #> Testing sea coordinates #> Reading layer `ne_110m_land' from data source `/tmp/RtmpBV0kIY/ne_110m_land.shp' using driver `ESRI Shapefile' #> Simple feature collection with 127 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.64513 #> Geodetic CRS:  WGS 84 #> Removed 0 records. #> Predictors identified, procceding with grid filter (removing NA and duplicated data).  # VIF calculation: i <- vif_predictors(i) #> Warning: the standard deviation is zero #> Error in xcor[mx[1], mx[2]]: subscript out of bounds  # Pseudoabsence generation: i <- pseudoabsence(i, method=\"bioclim\", variables_selected = \"vif\") #> Error in pseudoabsence(i, method = \"bioclim\", variables_selected = \"vif\"): could not find function \"pseudoabsence\"  # Custom trainControl: ctrl_sdm <- caret::trainControl(method = \"repeatedcv\", number = 4, repeats = 10, classProbs = TRUE, returnResamp = \"all\", summaryFunction = summary_sdm, savePredictions = \"all\")  # Train models: i <- train_sdm(i, algo = c(\"nnet\", \"kknn\"), variables_selected = \"vif\", ctrl=ctrl_sdm) #> Error in rep(\"pseudoabsence\", nrow(pa)): invalid 'times' argument"},{"path":"https://luizesser.github.io/caretSDM/reference/tsne_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"tSNE — tsne_sdm","title":"tSNE — tsne_sdm","text":"function calculates tSNE presences pseudoabsences data returns list plots.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/tsne_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tSNE — tsne_sdm","text":"","code":"tsne_sdm(occ, pred = NULL, variables_selected = NULL)"},{"path":"https://luizesser.github.io/caretSDM/reference/tsne_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tSNE — tsne_sdm","text":"occ occurrences input_sdm object. pred predictors object. occ class input_sdm, pred retrieved . selected_vars Variable used t-SNE. can also 'vif', previously calculated.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/tsne_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tSNE — tsne_sdm","text":"plot pseudoabsence dataset form list.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/tsne_sdm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tSNE — tsne_sdm","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/use_mem.html","id":null,"dir":"Reference","previous_headings":"","what":"MacroEcological Models (MEM) in caretSDM — use_mem","title":"MacroEcological Models (MEM) in caretSDM — use_mem","text":"functions sums species records one. used data cleaning routine.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/use_mem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MacroEcological Models (MEM) in caretSDM — use_mem","text":"","code":"use_mem(x, add = TRUE, name = \"MEM\")"},{"path":"https://luizesser.github.io/caretSDM/reference/use_mem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MacroEcological Models (MEM) in caretSDM — use_mem","text":"x occurrences input_sdm object containing occurrences. add Logical. new MEM records added pool (TRUE) species output summed records (FALSE)? Standard TRUE. name new records named? Standard \"MEM\".","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/use_mem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MacroEcological Models (MEM) in caretSDM — use_mem","text":"input_sdm occurrences object MEM data.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/use_mem.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MacroEcological Models (MEM) in caretSDM — use_mem","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/use_mem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MacroEcological Models (MEM) in caretSDM — use_mem","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect.  # Create input_sdm: i <- input_sdm(oc, sa)  # Use MEM: i <- use_mem(i)"},{"path":"https://luizesser.github.io/caretSDM/reference/varImp_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of variable importance for models — varImp_sdm","title":"Calculation of variable importance for models — varImp_sdm","text":"function retrieves variable importance function ROC curves predictor.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/varImp_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of variable importance for models — varImp_sdm","text":"","code":"varImp_sdm(m, id = NULL, ...)"},{"path":"https://luizesser.github.io/caretSDM/reference/varImp_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of variable importance for models — varImp_sdm","text":"m models input_sdm object. id Vector model ids filter varImp calculation. ... Parameters passing caret::varImp().","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/varImp_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of variable importance for models — varImp_sdm","text":"data.frame variable importance data.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/varImp_sdm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculation of variable importance for models — varImp_sdm","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/varImp_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of variable importance for models — varImp_sdm","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect.  # Create input_sdm: i <- input_sdm(oc, sa)  # Clean coordinates: i <- data_clean(i) #> Cell_ids identified, removing duplicated cell_id. #> Testing country capitals #> Removed 0 records. #> Testing country centroids #> Removed 0 records. #> Testing duplicates #> Removed 0 records. #> Testing equal lat/lon #> Removed 0 records. #> Testing biodiversity institutions #> Removed 1 records. #> Testing coordinate validity #> Removed 0 records. #> Testing sea coordinates #> Reading layer `ne_110m_land' from data source `/tmp/RtmpBV0kIY/ne_110m_land.shp' using driver `ESRI Shapefile' #> Simple feature collection with 127 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.64513 #> Geodetic CRS:  WGS 84 #> Removed 0 records. #> Predictors identified, procceding with grid filter (removing NA and duplicated data).  # VIF calculation: i <- vif_predictors(i) #> Warning: the standard deviation is zero #> Error in xcor[mx[1], mx[2]]: subscript out of bounds  # Pseudoabsence generation: i <- pseudoabsence(i, method=\"bioclim\", variables_selected = \"vif\") #> Error in pseudoabsence(i, method = \"bioclim\", variables_selected = \"vif\"): could not find function \"pseudoabsence\"  # Custom trainControl: ctrl_sdm <- caret::trainControl(method = \"repeatedcv\", number = 4, repeats = 10, classProbs = TRUE, returnResamp = \"all\", summaryFunction = summary_sdm, savePredictions = \"all\")  # Train models: i <- train_sdm(i, algo = c(\"nnet\", \"kknn\"), variables_selected = \"vif\", ctrl=ctrl_sdm) #> Error in rep(\"pseudoabsence\", nrow(pa)): invalid 'times' argument  # Variable importance: varImp_sdm(i) #> list()"},{"path":"https://luizesser.github.io/caretSDM/reference/vif_predictors.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate VIF — vif_predictors","title":"Calculate VIF — vif_predictors","text":"Apply Variance Inflation Factor (VIF) calculation.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/vif_predictors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate VIF — vif_predictors","text":"","code":"vif_predictors(pred, th = 0.5, maxobservations = 5000, variables_selected = NULL)  vif_summary(i)  selected_variables(i)"},{"path":"https://luizesser.github.io/caretSDM/reference/vif_predictors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate VIF — vif_predictors","text":"pred input_sdm predictors object. area Character. area used vif selection? Standard \"\". th Threshold applied VIF routine. maxobservations Max observations use calculate VIF. variables_selected subset predictors used function, can informed using parameter.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/vif_predictors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate VIF — vif_predictors","text":"input_sdm predictors object VIF data.","code":""},{"path":[]},{"path":"https://luizesser.github.io/caretSDM/reference/vif_predictors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate VIF — vif_predictors","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/vif_predictors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate VIF — vif_predictors","text":"","code":"# Create sdm_area object: sa <- sdm_area(parana, cell_size = 25000, crs = 6933) #> ! Making grid over study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables.  # Include predictors: sa <- add_predictors(sa, bioc) |> dplyr::select(c(\"bio01\", \"bio12\")) #> ! Making grid over the study area is an expensive task. Please, be patient! #> ℹ Using GDAL to make the grid and resample the variables. #> Error in dplyr::select(x$grid, ...): Can't select columns that don't exist. #> ✖ Column `bio01` doesn't exist.  # Include scenarios: sa <- add_scenarios(sa)  # Create occurrences: oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa) #> Warning: Some records from `occ` do not fall in `pred`. #> ℹ 2 elements from `occ` were excluded. #> ℹ If this seems too much, check how `occ` and `pred` intersect.  # Create input_sdm: i <- input_sdm(oc, sa)  # Clean coordinates: i <- data_clean(i) #> Cell_ids identified, removing duplicated cell_id. #> Testing country capitals #> Removed 0 records. #> Testing country centroids #> Removed 0 records. #> Testing duplicates #> Removed 0 records. #> Testing equal lat/lon #> Removed 0 records. #> Testing biodiversity institutions #> Removed 1 records. #> Testing coordinate validity #> Removed 0 records. #> Testing sea coordinates #> Reading layer `ne_110m_land' from data source `/tmp/RtmpBV0kIY/ne_110m_land.shp' using driver `ESRI Shapefile' #> Simple feature collection with 127 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.64513 #> Geodetic CRS:  WGS 84 #> Removed 0 records. #> Predictors identified, procceding with grid filter (removing NA and duplicated data).  # VIF calculation: i <- vif_predictors(i) #> Warning: the standard deviation is zero #> Error in xcor[mx[1], mx[2]]: subscript out of bounds"},{"path":"https://luizesser.github.io/caretSDM/reference/write_ensembles.html","id":null,"dir":"Reference","previous_headings":"","what":"Write caretSDM data — write_ensembles","title":"Write caretSDM data — write_ensembles","text":"function exports caretSDM data.","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/write_ensembles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write caretSDM data — write_ensembles","text":"","code":"write_ensembles(x, path = \"results/ensembles\", ext = \".tif\", centroid = FALSE)  write_predictions(   x,   path = \"results/predictions\",   ext = \".tif\",   centroid = FALSE )  write_predictors(   x,   path = \"results/predictors\",   ext = \".tif\",   centroid = FALSE )  write_models(x, path = \"results/models\")  write_gpkg(x, file_path, file_name)  # S3 method for class 'sdm_area' write_gpkg(x, file_path, file_name)  write_occurrences(x, path = \"results/occurrences.csv\", grid = FALSE, ...)  write_pseudoabsences(x, path = \"results/predictors\", ext = \".tif\", ...)  write_scenarios(x, path = \"results/predictors\", ext = \".tif\", ...)  write_grid(x, path = \"results/grid_study_area.gpkg\", centroid = FALSE, ...)  write_validation_metrics(x, path = \"results/validation_metrics\", ...)"},{"path":"https://luizesser.github.io/caretSDM/reference/write_ensembles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write caretSDM data — write_ensembles","text":"x Object written. Can class input_sdm, occurrences, predictions models. path path filename proper extension (see details) directory save files . centroid coordinates centroids cell included? Standard FALSE. file_path path save sdm_area GeoPackage file. file_name name sdm_area GeoPackage file saved without extension. extension saved?","code":""},{"path":"https://luizesser.github.io/caretSDM/reference/write_ensembles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write caretSDM data — write_ensembles","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""}]
