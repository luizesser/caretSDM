% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_sdm.R
\name{predict_sdm}
\alias{predict_sdm}
\alias{scenarios_names}
\alias{get_scenarios_data}
\alias{get_predictions}
\alias{get_ensembles}
\title{Predict SDM models in new data}
\usage{
predict_sdm(m,
            scen = NULL,
            metric = "ROC",
            th = 0.9,
            tp = "prob",
            ensembles = TRUE,
            file = NULL,
            add.current = TRUE)

scenarios_names(i)

get_scenarios_data(i)

get_predictions(i)

get_ensembles(i)
}
\arguments{
\item{m}{A \code{input_sdm} or a \code{models} object.}

\item{scen}{A \code{scenarios} object or \code{NULL}. If \code{NULL} and \code{m} is a
\code{input_sdm} with a scenarios slot, it will be used.}

\item{metric}{A character containing the metric in which the \code{th} will be calculated/applied.
Default is ROC. See \code{?mean_validation_metrics} for the metrics available.}

\item{th}{Thresholds for metrics. Can be numeric or a function.}

\item{tp}{Type of output to be retrieved. See details.}

\item{file}{File to sabe predictions.}

\item{ensembles}{Boolean. Should ensembles be calculated? If \code{TRUE} a series of ensembles
are obtained. See details.}

\item{add.current}{If current scenario is not available, predictors will be used as the current
scenario.}

\item{i}{A \code{input_sdm} or a \code{predictions} object.}
}
\value{
A \code{input_sdm} or a \code{predictions} object.
}
\description{
This function projects SDM models to new scenarios
}
\details{
\code{tp} is a parameter to be passed on caret to retrieve either the probabilities of classes
(tp="prob") or the raw output (tp="raw"), which could vary depending on the algorithm used, but
usually would be on of the classes (factor vector with presences and pseudoabsences).

When \code{ensembles} is set to \code{TRUE}, three ensembles are currently implemented.
mean_occ_prob is the mean occurrence probability, which is a simple mean of predictions,
wmean_AUC is the same mean_occ_prob, but weighted by AUC, and committee_avg is the committee
average, as known as majority rule, where predictions are binarized and then a mean is obtained.

\code{get_predictions} returns the \code{list} of all predictions to all scenarios, all species,
all algorithms and all repetitions. Useful for those who wish to implement their own ensemble
methods.

\code{get_ensembles} returns a \code{matrix} of \code{data.frame}s, where each column is a
scenario and each row is a species.

\code{scenarios_names} returns the scenarios names in a \code{sdm_area} or \code{input_sdm}
object.

\code{get_scenarios_data} returns the data from scenarios in a \code{sdm_area} or
\code{input_sdm} object.
}
\examples{
# Create sdm_area object:
sa <- sdm_area(parana, cell_size = 25000, crs = 6933)

# Include predictors:
sa <- add_predictors(sa, bioc) |> dplyr::select(c("bio01", "bio12"))

# Include scenarios:
sa <- add_scenarios(sa)

# Create occurrences:
oc <- occurrences_sdm(occ, crs = 6933) |> join_area(sa)

# Create input_sdm:
i <- input_sdm(oc, sa)

# Clean coordinates:
i <- data_clean(i)

# VIF calculation:
i <- vif_predictors(i)

# Pseudoabsence generation:
i <- pseudoabsence(i, method="bioclim", variables_selected = "vif")

# Custom trainControl:
ctrl_sdm <- caret::trainControl(method = "repeatedcv", number = 4, repeats = 10, classProbs = TRUE,
returnResamp = "all", summaryFunction = summary_sdm, savePredictions = "all")

# Train models:
i <- train_sdm(i, algo = c("nnet", "kknn"), variables_selected = "vif", ctrl=ctrl_sdm)

# Predict models:
i  <- predict_sdm(i)
i

}
\seealso{
\code{\link{sdm_area} \link{input_sdm} \link{mean_validation_metrics}}
}
\author{
LuÃ­z Fernando Esser (luizesser@gmail.com)
https://luizfesser.wordpress.com
}
